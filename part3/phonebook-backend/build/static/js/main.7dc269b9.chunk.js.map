{"version":3,"sources":["services/contacts.js","components/Contacts.js","components/Form.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","contact","post","id","delete","put","Contacts","props","contacts","deleteContact","map","name","number","onClick","Form","nameValue","numberValue","handleNameChange","handleNumberChange","addNewContact","onSubmit","value","onChange","Notification","message","className","App","useState","setContacts","errorMessage","setErrorMessage","newName","setNewName","newNumber","setNewNumber","searchResults","setSearchResults","searchTerm","setSearchTerm","useEffect","contactsService","allContacts","getSearchResults","str","filter","toLowerCase","includes","updateErrorMessage","setTimeout","event","target","preventDefault","newContactToAdd","nameExists","find","c","numberExists","undefined","nameConfirmationMsg","window","confirm","updatedContact","newList","concat","catch","error","console","log","numberConfirmationMsg","createdContact","err","forEach","finally","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7dc269b9.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseUrl = \"/api\";\n\nconst getAll = () => {\n  return axios.get(`${baseUrl}/persons`).then((response) => response.data);\n};\n\nconst createContact = (contact) => {\n  return axios\n    .post(`${baseUrl}/persons`, contact)\n    .then((response) => response.data);\n};\n\nconst deleteContact = (id) => {\n  return axios.delete(`${baseUrl}/persons/${id}`);\n};\n\nconst updateContact = (id, data) => {\n  return axios\n    .put(`${baseUrl}/persons/${id}`, data)\n    .then((response) => response.data);\n};\n\nexport default { getAll, createContact, deleteContact, updateContact };\n","import React from \"react\";\n\nconst Contacts = (props) => {\n  const { contacts, deleteContact } = props;\n\n  return (\n    <div>\n      <h2>Numbers</h2>\n      {contacts.map((contact) => (\n        <div key={contact.id}>\n          {contact.name} {contact.number}{\" \"}\n          <button\n            onClick={() => {\n              deleteContact(contact.id);\n            }}\n          >\n            delete\n          </button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Contacts;\n","import React from \"react\";\n\nconst Form = (props) => {\n  const {\n    nameValue,\n    numberValue,\n    handleNameChange,\n    handleNumberChange,\n    addNewContact,\n  } = props;\n\n  return (\n    <form onSubmit={addNewContact}>\n      <h2>Add new contact</h2>\n      <div>\n        Name: <input value={nameValue} onChange={handleNameChange} />\n      </div>\n      <div>\n        Phone: <input value={numberValue} onChange={handleNumberChange} />\n      </div>\n      <div>\n        <button>Add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\n\nconst Notification = (props) => {\n  const { message } = props;\n  if (message === null) return null;\n  return <div className=\"error\">{message}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\n\nimport contactsService from \"./services/contacts\";\n\nimport Contacts from \"./components/Contacts\";\nimport Form from \"./components/Form\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [contacts, setContacts] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    contactsService.getAll().then((allContacts) => {\n      setContacts(allContacts);\n      setSearchResults(allContacts);\n    });\n  }, []);\n\n  const handleNameChange = (event) => setNewName(event.target.value);\n  const handleNumberChange = (event) => setNewNumber(event.target.value);\n\n  const handleSearchTerm = (event) => {\n    setSearchTerm(event.target.value);\n    setSearchResults(getSearchResults(event.target.value));\n  };\n\n  const getSearchResults = (str) => {\n    const results =\n      str === \"\"\n        ? contacts\n        : contacts.filter((contact) =>\n            contact.name.toLowerCase().includes(str.toLowerCase())\n          );\n    return results;\n  };\n\n  const updateErrorMessage = (message) => {\n    setErrorMessage(message);\n    setTimeout(() => {\n      setErrorMessage(null);\n    }, 5000);\n  };\n\n  const deleteContact = (id) => {\n    let name;\n\n    contacts.forEach((c) => {\n      if (c.id === id) name = c.name;\n    });\n\n    const confirmed = window.confirm(\n      `Are you sure you want to delete ${name}'s contact?`\n    );\n\n    if (confirmed) {\n      contactsService\n        .deleteContact(id)\n        .then(() => {\n          updateErrorMessage(\"contact deleted successfully from server.\");\n        })\n        .catch((error) => {\n          updateErrorMessage(\"Contact is already deleted from the server.\");\n        })\n        .finally(() => {\n          setContacts(contacts.filter((contact) => contact.id !== id));\n          setSearchResults(\n            searchResults.filter((contact) => contact.id !== id)\n          );\n        });\n    }\n  };\n\n  const addNewContact = (event) => {\n    event.preventDefault();\n    const newContactToAdd = { name: newName, number: newNumber };\n\n    const nameExists = contacts.find((c) => c.name === newContactToAdd.name);\n    const numberExists = contacts.find(\n      (c) => c.number === newContactToAdd.number\n    );\n\n    if (nameExists !== undefined || numberExists !== undefined) {\n      if (nameExists !== undefined) {\n        const nameConfirmationMsg = `${newContactToAdd.name} already exist in the phonebook with phone number: ${nameExists.number}, want to update phone number?`;\n        if (window.confirm(nameConfirmationMsg))\n          contactsService\n            .updateContact(nameExists.id, newContactToAdd)\n            .then((updatedContact) => {\n              const newList = contacts.filter((c) => c.id !== nameExists.id);\n              setContacts(newList.concat(updatedContact));\n              setSearchResults(newList.concat(updatedContact));\n              updateErrorMessage(\n                `contact ${updatedContact.name} successfully from server.`\n              );\n            })\n            .catch((error) => {\n              console.log(\"=======================================\");\n              // console.log(error);\n            });\n      } else {\n        if (numberExists) {\n          const numberConfirmationMsg = `${newContactToAdd.number} already exist in the phonebook with name: ${numberExists.name}, want to update name?`;\n          if (window.confirm(numberConfirmationMsg))\n            contactsService\n              .updateContact(numberExists.id, newContactToAdd)\n              .then((updatedContact) => {\n                const newList = contacts.filter(\n                  (c) => c.id !== numberExists.id\n                );\n                setContacts(newList.concat(updatedContact));\n                setSearchResults(newList.concat(updatedContact));\n                updateErrorMessage(\n                  `contact ${updatedContact.name} successfully from server.`\n                );\n              });\n        }\n      }\n    } else {\n      contactsService\n        .createContact(newContactToAdd)\n        .then((createdContact) => {\n          setContacts(contacts.concat(createdContact));\n          setSearchResults(contacts.concat(createdContact));\n          updateErrorMessage(\n            `contact ${createdContact.name} successfully created.`\n          );\n        })\n        .catch((err) => {\n          updateErrorMessage(err.response.data.error.message);\n        });\n    }\n\n    setNewName(\"\");\n    setNewNumber(\"\");\n    setSearchTerm(\"\");\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n\n      <Notification message={errorMessage} />\n      <div>\n        Search: <input value={searchTerm} onChange={handleSearchTerm} />\n      </div>\n\n      <Form\n        nameValue={newName}\n        numberValue={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        addNewContact={addNewContact}\n      />\n\n      <Contacts contacts={searchResults} deleteContact={deleteContact} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}