{"version":3,"sources":["services/notes.js","components/Note.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","Note","props","note","label","toggleImportance","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","important","map","find","n","changedNote","updatedNote","catch","error","setTimeout","toggleImportanceById","onSubmit","event","preventDefault","noteObject","date","Date","Math","random","createdNote","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.efdee568.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"http://localhost:3001/api/notes\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n};\n","import React from \"react\";\n\nconst Note = (props) => {\n  const { note, label, toggleImportance } = props;\n\n  return (\n    <li className=\"note\">\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\n\nexport default Note;\n","import React from \"react\";\n\nconst Notification = (props) => {\n  const { message } = props;\n  if (message === null) return null;\n\n  return <div className=\"error\">{message}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\n\nimport noteService from \"./services/notes\";\n\nimport Note from \"./components/Note\";\nimport Notification from \"./components/Notification\";\n\nconst Footer = () => {\n  const footerStyle = {\n    color: \"green\",\n    fontStyle: \"italic\",\n    fontSize: 16,\n  };\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>\n        Note app, Department of Computer Science, University of Helsinki 2021\n      </em>\n    </div>\n  );\n};\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const hook = () => {\n    noteService.getAll().then((initialNotes) => {\n      setNotes(initialNotes);\n    });\n  };\n\n  useEffect(hook, []);\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date(),\n      important: Math.random() < 0.5,\n    };\n\n    noteService.create(noteObject).then((createdNote) => {\n      setNotes(notes.concat(createdNote));\n      setNewNote(\"\");\n    });\n  };\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter((note) => note.important === true);\n\n  const toggleImportanceById = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then((updatedNote) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : updatedNote)));\n      })\n      .catch((error) => {\n        setErrorMessage(\n          `Note ${note.content} was already removed from server.`\n        );\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n      });\n  };\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          {showAll ? \"show important\" : \"show all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            label={\n              note.important ? \"Select as not important\" : \"Select as important\"\n            }\n            toggleImportance={() => {\n              toggleImportanceById(note.id);\n            }}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\nimport \"./index.css\";\n\nconst notes = [\n  {\n    id: 1,\n    content: \"HTML is easy\",\n    date: \"2019-05-30T17:30:31.098Z\",\n    important: true,\n  },\n  {\n    id: 2,\n    content: \"Browser can execute only JavaScript\",\n    date: \"2019-05-30T18:39:34.091Z\",\n    important: false,\n  },\n  {\n    id: 3,\n    content: \"GET and POST are the most important methods of HTTP protocol\",\n    date: \"2019-05-30T19:20:14.298Z\",\n    important: true,\n  },\n];\n\nReactDOM.render(<App notes={notes} />, document.getElementById(\"root\"));\n"],"sourceRoot":""}